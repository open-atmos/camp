! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : cb05cl_ae5.map
! Time                 : Thu Feb  8 11:36:55 2018
! Working directory    : /home/Earth/mdawson/Documents/camp-chem/camp/test/chemistry/cb05cl_ae5
! Equation file        : cb05cl_ae5.kpp
! Output root filename : cb05cl_ae5
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 75 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 74 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 62 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 1 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 188 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 75 

### Species -------------------------------------------

Variable species
  1 = BNZHRXN (n) 26 = CH4 (r)    51 = ETH (r)   
  2 = BNZNRXN (n) 27 = HONO (r)   52 = TERP (r)  
  3 = BENZRO2 (r) 28 = H2O2 (r)   53 = IOLE (r)  
  4 = BENZENE (r) 29 = FACD (r)   54 = OLE (r)   
  5 = ISOPRXN (n) 30 = PACD (r)   55 = XO2N (r)  
  6 = SESQRXN (n) 31 = PANX (r)   56 = PAR (r)   
  7 = SESQ (r)   32 = PNA (r)    57 = ISOP (r)  
  8 = SULF (n)   33 = TO2 (r)    58 = ISPD (r)  
  9 = SULRXN (n) 34 = AACD (r)   59 = ALDX (r)  
 10 = TOLHRXN (n) 35 = ETHA (r)   60 = ALD2 (r)  
 11 = TOLNRXN (n) 36 = MEOH (r)   61 = FORM (r)  
 12 = TOLRO2 (r) 37 = ETOH (r)   62 = NTR (r)   
 13 = TRPRXN (n) 38 = HCL (r)    63 = O3 (r)    
 14 = XYLHRXN (n) 39 = HCO3 (r)   64 = MEO2 (r)  
 15 = XYLNRXN (n) 40 = ROOH (r)   65 = XO2 (r)   
 16 = XYLRO2 (r) 41 = MGLY (r)   66 = C2O3 (r)  
 17 = DUMMY (n)  42 = CLO (r)    67 = CL (r)    
 18 = CL2 (r)    43 = CRO (r)    68 = NO (r)    
 19 = SO2 (r)    44 = FMCL (r)   69 = HO2 (r)   
 20 = O1D (r)    45 = MEPX (r)   70 = NO3 (r)   
 21 = HOCL (r)   46 = HNO3 (r)   71 = OH (r)    
 22 = PAN (r)    47 = CO (r)     72 = CXO3 (r)  
 23 = TOL (r)    48 = OPEN (r)   73 = O (r)     
 24 = N2O5 (r)   49 = ROR (r)    74 = NO2 (r)   
 25 = XYL (r)    50 = CRES (r)  

Fixed species
  1 = O2 (r)    

### Subroutines ---------------------------------------

SUBROUTINE Fun ( V, F, RCT, Vdot )
SUBROUTINE Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
